<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EditorFormatString" xml:space="preserve">
    <value>Snippet File (*.snippet)
*.snippet

</value>
  </data>
  <data name="UnknownFileFormat" xml:space="preserve">
    <value>Unknown format.</value>
  </data>
  <data name="NullFilename" xml:space="preserve">
    <value>File name cannot be null.</value>
  </data>
  <data name="SCCError" xml:space="preserve">
    <value>Unexpected error from the source control provider.</value>
  </data>
  <data name="BadSaveFlags" xml:space="preserve">
    <value>Can not complete the save operation.</value>
  </data>
  <data name="OutsideEditorFileChange" xml:space="preserve">
    <value>This file has changed outside the editor. Do you wish to reload it?</value>
  </data>
  <data name="CanNotCreateWindow" xml:space="preserve">
    <value>Can not create tool window.</value>
  </data>
  <data name="ToolWindowTitle" xml:space="preserve">
    <value>Snippet Explorer</value>
  </data>
  <data name="DisplayNameCSharp" xml:space="preserve">
    <value>C#</value>
  </data>
  <data name="DisplayNameVisualBasic" xml:space="preserve">
    <value>Visual Basic</value>
  </data>
  <data name="DisplayNameXML" xml:space="preserve">
    <value>XML</value>
  </data>
  <data name="SnippetReplacementMarker" xml:space="preserve">
    <value>Snippet Replacement Marker</value>
  </data>
  <data name="PropCategoryFileInfo" xml:space="preserve">
    <value>File Info</value>
  </data>
  <data name="PropCategorySnippData" xml:space="preserve">
    <value>Snippet Data</value>
  </data>
  <data name="PropNameSnippetPath" xml:space="preserve">
    <value>File Path</value>
  </data>
  <data name="PropNameSnippetDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="PropNameSnippetTitle" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="PropNameSnippetShortcut" xml:space="preserve">
    <value>Shortcut</value>
  </data>
  <data name="PropNameSnippetHelpUrl" xml:space="preserve">
    <value>Help Url</value>
  </data>
  <data name="PropDescriptionSnippetAuthor" xml:space="preserve">
    <value>Author of this snippet</value>
  </data>
  <data name="PropDescriptionSnippetDescription" xml:space="preserve">
    <value>Description of this snippet</value>
  </data>
  <data name="PropDescriptionSnippetHelpUrl" xml:space="preserve">
    <value>Url to locate more info about this snippets content</value>
  </data>
  <data name="PropDescriptionSnippetImports" xml:space="preserve">
    <value>The collection of imports for this snippet.</value>
  </data>
  <data name="PropDescriptionSnippetKeywords" xml:space="preserve">
    <value>Keywords that relate to this snippet</value>
  </data>
  <data name="PropDescriptionSnippetPath" xml:space="preserve">
    <value>The full path to the snippet file</value>
  </data>
  <data name="PropDescriptionSnippetReferences" xml:space="preserve">
    <value>The collection of references for this snippet.</value>
  </data>
  <data name="PropDescriptionSnippetReplacements" xml:space="preserve">
    <value>The collection of replacements for this snippet</value>
  </data>
  <data name="PropDescriptionSnippetShortcut" xml:space="preserve">
    <value>Keyboard shortcut to insert this snippet</value>
  </data>
  <data name="PropDescriptionSnippetTitle" xml:space="preserve">
    <value>Title of this snippet</value>
  </data>
  <data name="PropNameSnippetAuthor" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="PropNameSnippetImports" xml:space="preserve">
    <value>Imports</value>
  </data>
  <data name="PropNameSnippetKeywords" xml:space="preserve">
    <value>Keywords</value>
  </data>
  <data name="PropNameSnippetReferences" xml:space="preserve">
    <value>References</value>
  </data>
  <data name="PropNameSnippetReplacements" xml:space="preserve">
    <value>Replacements</value>
  </data>
  <data name="PropDescriptionSnippetKind" xml:space="preserve">
    <value>Kind of snippet.  \nNote: Only supported in Visual Basic</value>
  </data>
  <data name="PropDescriptionSnippetType" xml:space="preserve">
    <value>Type of snippet.  \nEither expansion or surround with.\n Note: SurroundWith not supported in Visual Basic.</value>
  </data>
  <data name="PropNameSnippetKind" xml:space="preserve">
    <value>Snippet Kind</value>
  </data>
  <data name="PropNameSnippetType" xml:space="preserve">
    <value>Snippet Type</value>
  </data>
  <data name="ReplacementLiteralName" xml:space="preserve">
    <value>Literal</value>
  </data>
  <data name="ReplacementObjectName" xml:space="preserve">
    <value>Object</value>
  </data>
  <data name="TypeInvalidForLiteralSymbol" xml:space="preserve">
    <value>N/A</value>
  </data>
  <data name="SnippetReplacementMarkerDescription" xml:space="preserve">
    <value>A marker to highlight replacements</value>
  </data>
  <data name="SnippetReplacementMarkerText" xml:space="preserve">
    <value>A replacement</value>
  </data>
  <data name="ErrorFileIO" xml:space="preserve">
    <value>File IO Error</value>
  </data>
  <data name="ErrorFileLoadFail" xml:space="preserve">
    <value>The snippet file could not be loaded.  A blank snippet will be created instead.</value>
  </data>
  <data name="SaveDialogText" xml:space="preserve">
    <value>Save Snippet As</value>
  </data>
  <data name="ErrorInvalidMarkerID" xml:space="preserve">
    <value>Invalid command ID for marker insertion!</value>
  </data>
  <data name="SnippetFormLanguageLabelText" xml:space="preserve">
    <value>Language: </value>
  </data>
  <data name="SnippetFormReplacementLabelText" xml:space="preserve">
    <value>Replacements</value>
  </data>
  <data name="SnippetFormSaveFilter" xml:space="preserve">
    <value>Snippet File|*.snippet|All Files|*.*</value>
  </data>
  <data name="SnippetFormTitlesLabelText" xml:space="preserve">
    <value>Snippet:</value>
  </data>
  <data name="SnippetFormColumnHeaderDefault" xml:space="preserve">
    <value>Defaults to</value>
  </data>
  <data name="SnippetFormColumnHeaderEditable" xml:space="preserve">
    <value>Editable</value>
  </data>
  <data name="SnippetFormColumnHeaderFunction" xml:space="preserve">
    <value>Function</value>
  </data>
  <data name="SnippetFormColumnHeaderID" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="SnippetFormColumnHeaderReplacementKind" xml:space="preserve">
    <value>Kind</value>
  </data>
  <data name="SnippetFormColumnHeaderTooltip" xml:space="preserve">
    <value>Tooltip</value>
  </data>
  <data name="SnippetFormColumnHeaderType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="SnippetFormTipDefault" xml:space="preserve">
    <value>The deafult value of the id</value>
  </data>
  <data name="SnippetFormTipEditable" xml:space="preserve">
    <value>Is this replacement editable?</value>
  </data>
  <data name="SnippetFormTipFunction" xml:space="preserve">
    <value>A predefined function to use</value>
  </data>
  <data name="SnippetFormTipID" xml:space="preserve">
    <value>The replacement ID</value>
  </data>
  <data name="SnippetFormTipReplacementKind" xml:space="preserve">
    <value>Is your replacement a Literal or Object?</value>
  </data>
  <data name="SnippetFormTipReplacementType" xml:space="preserve">
    <value>What type is the object?</value>
  </data>
  <data name="SnippetFormTipToolTip" xml:space="preserve">
    <value>Tooltip shown in code editor</value>
  </data>
  <data name="ErrorMarkerAttributeLanguageService" xml:space="preserve">
    <value>Invalid ProvideLanguageService argument</value>
  </data>
  <data name="Empty" xml:space="preserve">
    <value />
  </data>
  <data name="ErrorInvalidReplacementID" xml:space="preserve">
    <value>"{0}" is an invalid replacement ID.</value>
  </data>
  <data name="CodeSnippet" xml:space="preserve">
    <value>Code Snippet</value>
  </data>
  <data name="PackageNameFormat" xml:space="preserve">
    <value>{0} - {1}</value>
  </data>
  <data name="ErrorDTENull" xml:space="preserve">
    <value>The automation model object was null.  Fatal Error.</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="localIcon" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\HomeHS.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="DisplayNameHTML" xml:space="preserve">
    <value>HTML</value>
  </data>
  <data name="DisplayNameJavaScript" xml:space="preserve">
    <value>JavaScript</value>
  </data>
  <data name="DisplayNameSQL" xml:space="preserve">
    <value>SQL</value>
  </data>
  <data name="PropDescriptionSnippetAlternativeShortcuts" xml:space="preserve">
    <value>Collection of alternative shortcuts used for executing the snippet</value>
  </data>
  <data name="PropNameSnippetAlternativeShortcuts" xml:space="preserve">
    <value>Alternative Shortcuts</value>
  </data>
  <data name="DisplayNameCPP" xml:space="preserve">
    <value>C++</value>
  </data>
  <data name="PropDescriptionSnippetDelimiter" xml:space="preserve">
    <value>Replacement Delimiter</value>
  </data>
  <data name="DisplayNameXAML" xml:space="preserve">
    <value>XAML</value>
  </data>
  <data name="DisplayNameSQLServerDataTools" xml:space="preserve">
    <value>Microsoft SQL Server Data Tools, T-SQL Language Services</value>
  </data>
</root>